{"version":3,"sources":["config/firebase.js","App.jsx","reportWebVitals.js","index.js","serviceWorker.js"],"names":["firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","App","useState","token","setToken","useEffect","messaging","requestPermission","then","getToken","console","log","className","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","register","registration","scope","catch","err"],"mappings":"wMAYAA,IAASC,cAVM,CACXC,OAAQ,0CACRC,WAAY,uCACZC,UAAW,uBACXC,cAAe,mCACfC,kBAAmB,eACnBC,MAAO,8CAMIP,QAAf,E,OCeeQ,MAxBf,WACE,MAA0BC,mBAAS,MAAnC,mBAAOC,EAAP,KAAcC,EAAd,KAWA,OAVAC,qBAAW,WACP,IAAMC,EAAYb,EAASa,YAC3BA,EAAUC,oBAAoBC,MAAK,WAC/B,OAAOF,EAAUG,cAClBD,MAAK,SAAAL,GACNO,QAAQC,IAAIR,GACZC,EAASD,QAEZ,IAGD,sBAAKS,UAAU,YAAf,UACE,qBAAKA,UAAU,MAAf,SACA,uDAEF,qBAAKA,UAAU,MAAf,SACGT,GAAS,4BAAIA,UCXLU,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBP,MAAK,YAAkD,IAA/CQ,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCAdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SCVlB,kBAAmBC,WACrBA,UAAUC,cACPC,SAAS,+BACTpB,MAAK,SAAUqB,GAGd,OADAnB,QAAQC,IAAI,gBAAiBkB,EAAaC,OACnCD,EAAaC,SAErBC,OAAM,SAAUC,GACf,OAAOA,KDSjBnB,M","file":"static/js/main.a5c0c01d.chunk.js","sourcesContent":["import firebase from 'firebase'\r\n\r\nconst config = {\r\n    apiKey: \"AIzaSyBtgWEGKUit3hn7g8xdW9T9SzeCIfYmwz8\",\r\n    authDomain: \"react-firebase-94740.firebaseapp.com\",\r\n    projectId: \"react-firebase-94740\",\r\n    storageBucket: \"react-firebase-94740.appspot.com\",\r\n    messagingSenderId: \"308234876127\",\r\n    appId: \"1:308234876127:web:cda38b424a729326bca56a\"\r\n}\r\n\r\n\r\nfirebase.initializeApp(config)\r\n\r\nexport default firebase\r\n","import {useState, useEffect} from \"react\";\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport firebase from \"./config/firebase\";\r\n\r\n\r\nfunction App() {\r\n  const [token, setToken] = useState(null)\r\n  useEffect( () => {\r\n      const messaging = firebase.messaging()\r\n      messaging.requestPermission().then(() => {\r\n          return messaging.getToken()\r\n      }).then(token => {\r\n        console.log(token)\r\n        setToken(token)\r\n      })\r\n  }, [])\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"row\">\r\n      <h1>React Firebase Test</h1>\r\n      </div>\r\n    <div className=\"row\">\r\n      {token && <p>{token}</p>}\r\n      </div>  \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { registerServiceWorker } from './serviceWorker'\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\nregisterServiceWorker()\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n","export const registerServiceWorker = () => {\r\n    if ('serviceWorker' in navigator) {\r\n      navigator.serviceWorker\r\n        .register('../firebase-messaging-sw.js')\r\n        .then(function (registration) {\r\n          // eslint-disable-next-line no-console\r\n          console.log('[SW]: SCOPE: ', registration.scope);\r\n          return registration.scope;\r\n        })\r\n        .catch(function (err) {\r\n          return err;\r\n        });\r\n    }\r\n  };"],"sourceRoot":""}